tokens = """
{
"lnx"              : {"ti-code": "  13"  , "action": "php_code"              , "statement": "x = log(x)"},
"INV lnx"          : {"ti-code": "- 13"  , "action": "php_code"              , "statement": "x = exp(x)"},
"CE"               : {"ti-code": "  14"  , "action": "php_code"              , "statement": "x = 0"},
"CLR"              : {"ti-code": "  15"  , "action": "clear"},
"2nd log"          : {"ti-code": "  18"  , "action": "php_code"              , "statement": "x = log10(x)"},
"INV 2nd log"      : {"ti-code": "- 18"  , "action": "php_code"              , "statement": "x = pow(x, 10)"},
"2nd Ct"           : {"ti-code": "  19"  , "action": "php_code"              , "statement": "mem[7] = 0"},
"INV 2nd Ct"       : {"ti-code": "- 19"  , "action": "clear_all"},
"2nd tan"          : {"ti-code": "  20"  , "action": "php_code"              , "statement": "x = tan(unit2rad(x))"},
"INV 2nd tan"      : {"ti-code": "- 20"  , "action": "php_code"              , "statement": "x = rad2unit(atan(x))"},
"x<>t"             : {"ti-code": "  22"  , "action": "exchange_memory"       , "number": 7},
"x2"               : {"ti-code": "  23"  , "action": "php_code"              , "statement": "x *= x"},
"V2"               : {"ti-code": "  24"  , "action": "php_code"              , "statement": "x = sqrt(x)"},
"1/x"              : {"ti-code": "  25"  , "action": "php_code"              , "statement": "x = 1 / x"},
"2nd D.MS"         : {"ti-code": "  26"  , "action": "php_code"              , "statement": "x = dms2degrees(x)"},
"INV 2nd D.MS"     : {"ti-code": "- 26"  , "action": "php_code"              , "statement": "x = degrees2dms(x)"},
"2nd P->R"         : {"ti-code": "  27"  , "action": "polar_to_rectangular"},
"INV 2nd P->R"     : {"ti-code": "- 27"  , "action": "rectangular_to_polar"},
"2nd sin"          : {"ti-code": "  28"  , "action": "php_code"              , "statement": "x = sin(unit2rad(x))"},
"INV 2nd sin"      : {"ti-code": "- 28"  , "action": "php_code"              , "statement": "x = rad2unit(asin(x))"},
"2nd cos"          : {"ti-code": "  29"  , "action": "php_code"              , "statement": "x = cos(unit2rad(x))"},
"INV 2nd cos"      : {"ti-code": "- 29"  , "action": "php_code"              , "statement": "x = rad2unit(acos(x))"},
"2nd pi"           : {"ti-code": "  30"  , "action": "php_code"              , "statement": "x = M_PI"},
"STO 0"            : {"ti-code": "  32 0", "action": "php_code"              , "statement": "mem[0] = x"},
"STO 1"            : {"ti-code": "  32 1", "action": "php_code"              , "statement": "mem[1] = x"},
"STO 2"            : {"ti-code": "  32 2", "action": "php_code"              , "statement": "mem[2] = x"},
"STO 3"            : {"ti-code": "  32 3", "action": "php_code"              , "statement": "mem[3] = x"},
"STO 4"            : {"ti-code": "  32 4", "action": "php_code"              , "statement": "mem[4] = x"},
"STO 5"            : {"ti-code": "  32 5", "action": "php_code"              , "statement": "mem[5] = x"},
"STO 6"            : {"ti-code": "  32 6", "action": "php_code"              , "statement": "mem[6] = x"},
"STO 7"            : {"ti-code": "  32 7", "action": "php_code"              , "statement": "mem[7] = x"},
"RCL 0"            : {"ti-code": "  33 0", "action": "php_code"              , "statement": "x = mem[0]"},
"RCL 1"            : {"ti-code": "  33 1", "action": "php_code"              , "statement": "x = mem[1]"},
"RCL 2"            : {"ti-code": "  33 2", "action": "php_code"              , "statement": "x = mem[2]"},
"RCL 3"            : {"ti-code": "  33 3", "action": "php_code"              , "statement": "x = mem[3]"},
"RCL 4"            : {"ti-code": "  33 4", "action": "php_code"              , "statement": "x = mem[4]"},
"RCL 5"            : {"ti-code": "  33 5", "action": "php_code"              , "statement": "x = mem[5]"},
"RCL 6"            : {"ti-code": "  33 6", "action": "php_code"              , "statement": "x = mem[6]"},
"RCL 7"            : {"ti-code": "  33 7", "action": "php_code"              , "statement": "x = mem[7]"},
"SUM 0"            : {"ti-code": "  34 0", "action": "php_code"              , "statement": "mem[0] += x"},
"SUM 1"            : {"ti-code": "  34 1", "action": "php_code"              , "statement": "mem[1] += x"},
"SUM 2"            : {"ti-code": "  34 2", "action": "php_code"              , "statement": "mem[2] += x"},
"SUM 3"            : {"ti-code": "  34 3", "action": "php_code"              , "statement": "mem[3] += x"},
"SUM 4"            : {"ti-code": "  34 4", "action": "php_code"              , "statement": "mem[4] += x"},
"SUM 5"            : {"ti-code": "  34 5", "action": "php_code"              , "statement": "mem[5] += x"},
"SUM 6"            : {"ti-code": "  34 6", "action": "php_code"              , "statement": "mem[6] += x"},
"SUM 7"            : {"ti-code": "  34 7", "action": "php_code"              , "statement": "mem[7] += x"},
"INV SUM 0"        : {"ti-code": "- 34 0", "action": "php_code"              , "statement": "mem[0] -= x"},
"INV SUM 1"        : {"ti-code": "- 34 1", "action": "php_code"              , "statement": "mem[1] -= x"},
"INV SUM 2"        : {"ti-code": "- 34 2", "action": "php_code"              , "statement": "mem[2] -= x"},
"INV SUM 3"        : {"ti-code": "- 34 3", "action": "php_code"              , "statement": "mem[3] -= x"},
"INV SUM 4"        : {"ti-code": "- 34 4", "action": "php_code"              , "statement": "mem[4] -= x"},
"INV SUM 5"        : {"ti-code": "- 34 5", "action": "php_code"              , "statement": "mem[5] -= x"},
"INV SUM 6"        : {"ti-code": "- 34 6", "action": "php_code"              , "statement": "mem[6] -= x"},
"INV SUM 7"        : {"ti-code": "- 34 7", "action": "php_code"              , "statement": "mem[7] -= x"},
"y^x"              : {"ti-code": "  35"  , "action": "power"                 , "type": "power"},
"INV y^x"          : {"ti-code": "- 35"  , "action": "power"                 , "type": "root"},
"2nd Pause"        : {"ti-code": "  36"  , "action": "php_code"              , "statement": "sleep(1)"},
"2nd Exc 7"        : {"ti-code": "  38 7", "action": "exchange_memory"       , "number": 7},
"2nd Prod 0"       : {"ti-code": "  39 0", "action": "php_code"              , "statement": "mem[0] *= x"},
"2nd Prod 1"       : {"ti-code": "  39 1", "action": "php_code"              , "statement": "mem[1] *= x"},
"2nd Prod 2"       : {"ti-code": "  39 2", "action": "php_code"              , "statement": "mem[2] *= x"},
"2nd Prod 3"       : {"ti-code": "  39 3", "action": "php_code"              , "statement": "mem[3] *= x"},
"2nd Prod 4"       : {"ti-code": "  39 4", "action": "php_code"              , "statement": "mem[4] *= x"},
"2nd Prod 5"       : {"ti-code": "  39 5", "action": "php_code"              , "statement": "mem[5] *= x"},
"2nd Prod 6"       : {"ti-code": "  39 6", "action": "php_code"              , "statement": "mem[6] *= x"},
"2nd Prod 7"       : {"ti-code": "  39 7", "action": "php_code"              , "statement": "mem[7] *= x"},
"INV 2nd Prod 0"   : {"ti-code": "- 39 0", "action": "php_code"              , "statement": "mem[0] /= x"},
"INV 2nd Prod 1"   : {"ti-code": "- 39 1", "action": "php_code"              , "statement": "mem[1] /= x"},
"INV 2nd Prod 2"   : {"ti-code": "- 39 2", "action": "php_code"              , "statement": "mem[2] /= x"},
"INV 2nd Prod 3"   : {"ti-code": "- 39 3", "action": "php_code"              , "statement": "mem[3] /= x"},
"INV 2nd Prod 4"   : {"ti-code": "- 39 4", "action": "php_code"              , "statement": "mem[4] /= x"},
"INV 2nd Prod 5"   : {"ti-code": "- 39 5", "action": "php_code"              , "statement": "mem[5] /= x"},
"INV 2nd Prod 6"   : {"ti-code": "- 39 6", "action": "php_code"              , "statement": "mem[6] /= x"},
"INV 2nd Prod 7"   : {"ti-code": "- 39 7", "action": "php_code"              , "statement": "mem[7] /= x"},
"2nd |x|"          : {"ti-code": "  40"  , "action": "php_code"              , "statement": "x = abs(x)"},
"EE"               : {"ti-code": "  42"  , "action": "scientific_notation"   , "type": "EE"},
"INV EE"           : {"ti-code": "- 42"  , "action": "php_code"              , "statement": "ee = true"},
"("                : {"ti-code": "  43"  , "action": "open_parenthesis"      , "type": "("},
")"                : {"ti-code": "  44"  , "action": "closing_parenthesis"   , "type": ")"},
"2nd Nop"          : {"ti-code": "  46"  , "action": "php_code"              , "statement": ""},
"2nd Fix"          : {"ti-code": "  48"  , "action": "php_code"              , "statement": "fix = x"},
"INV 2nd Fix"      : {"ti-code": "- 48"  , "action": "php_code"              , "statement": "fix = None"},
"2nd Int"          : {"ti-code": "  49"  , "action": "php_code"              , "statement": "x = int(x)"},
"INV 2nd Int"      : {"ti-code": "- 49"  , "action": "php_code"              , "statement": "x = x - int(x)"},
"2nd Deg"          : {"ti-code": "  50"  , "action": "php_code"              , "statement": "unit = 'Deg'"},
"GTO 0"            : {"ti-code": "  51 0", "action": "php_code"              , "statement": "goto lbl_0"},
"*"                : {"ti-code": "  55"  , "action": "multiplication"        , "type": "*"},
"2nd Dsz"          : {"ti-code": "  56"  , "action": "decrement_skip_on_zero", "statement": "if mem[0] != 0:"},
"INV 2nd Dsz"      : {"ti-code": "- 56"  , "action": "decrement_skip_on_zero", "statement": "if mem[0] == 0:"},
"2nd Rad"          : {"ti-code": "  60"  , "action": "php_code"              , "statement": "unit = 'Rad'"},
"SBR 0"            : {"ti-code": "  61 0", "action": "php_code"              , "statement": "sbr_0()"},
"SBR 1"            : {"ti-code": "  61 1", "action": "php_code"              , "statement": "sbr_1()"},
"INV SBR"          : {"ti-code": "- 61"  , "action": "php_code"},
"2nd x=t"          : {"ti-code": "  66"  , "action": "php_code"              , "statement": "if x == mem[7]:"},
"INV 2nd x=t"      : {"ti-code": "- 66"  , "action": "php_code"              , "statement": "if x != mem[7]:"},
"2nd Grd"          : {"ti-code": "  70"  , "action": "php_code"              , "statement": "unit = 'Grd'"},
"RST"              : {"ti-code": "  71"},
"2nd x>=t"         : {"ti-code": "  76"  , "action": "php_code"              , "statement": "if x >= mem[7]:"},
"INV 2nd x>=t"     : {"ti-code": "- 76"  , "action": "php_code"              , "statement": "if x < mem[7]:"},
"2nd s2"           : {"ti-code": "  80"  , "action": "php_code"              , "statement": "x = (mem[2] - mem[1] * mem[1] / mem[0]) / mem[0])"}, # var(Y) = sum(Y^2) / N - avg(Y)
"INV 2nd s2"       : {"ti-code": "- 80"  , "action": "php_code"              , "statement": "x = (mem[4] - mem[3] * mem[3] / mem[0]) / mem[0])"}, # var(X) = sum(X^2) / N - avg(X)
"R/S"              : {"ti-code": "  81"},
#"."               : {"ti-code": "  83"}, # Not a token as a single character
"+/-"              : {"ti-code": "  84"  , "action": "php_code"              , "statement": "x = -x"},
"="                : {"ti-code": "  85"  , "action": "equality"              , "type": "="},
"2nd Lbl 0"        : {"ti-code": "  86 0", "action": "php_code"              , "statement": "lbl_0:"},
"2nd Lbl 1"        : {"ti-code": "  86 1", "action": "php_code"              , "statement": "lbl_1:"},
"2nd S+"           : {"ti-code": "  88"  , "action": "sum"},
"INV 2nd S+"       : {"ti-code": "- 88"},
"2nd x"            : {"ti-code": "  89"  , "action": "php_code"              , "statement": "x = mem[1] / mem[0]"}, # avg(Y) = sum(Y) / N
"INV 2nd x"        : {"ti-code": "- 89"  , "action": "php_code"              , "statement": "x = mem[3] / mem[0]"}, # avg(X) = sum(X) / N

# Operators must be after the tokens because some of them use them, ex. "+/-"
"/"                : {"ti-code": "  45"  , "action": "multiplication"        , "type": "/"},
"-"                : {"ti-code": "  65"  , "action": "addition"              , "type": "-"},
"+"                : {"ti-code": "  75"  , "action": "addition"              , "type": "+"},
}
"""

tokens = eval(tokens)
